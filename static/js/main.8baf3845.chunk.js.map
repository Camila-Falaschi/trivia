{"version":3,"sources":["images/couldBeBetter.gif","images/logoLogin.png","images/logoheader.png","images/feedback0.gif","images/win3.gif","images/win4.gif","images/superWin.gif","components/fetchToken.js","redux/actions/index.js","pages/Settings.js","pages/Login.js","components/Question.js","components/Header.js","pages/Game.js","components/PlayAgain.js","components/BtnRanking.js","components/Score.js","pages/Feedback.js","components/Home.js","pages/Ranking.js","App.js","redux/reducers/player.js","redux/reducers/loginReducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["module","exports","fetchToken","a","fetch","require","token","json","addPointsAction","points","type","countAssertions","state","Settings","diff","category","onInputChange","target","value","name","setState","onButtonClick","props","setSettingsAction","closeSettings","this","className","data-testid","htmlFor","id","onChange","onClick","React","Component","connect","dispatch","obj","Login","email","disabled","settings","validEmail","test","setOnChange","validName","length","toSettings","setOnclick","history","dispatchLogin","localStorage","setItem","push","src","logo","alt","user","Question","avaliable","timer","time","difficultyPoints","level","startTimer","setInterval","Number","stopTimer","clearInterval","onHandleClick","answer","correctAnswer","difficulty","assertions","score","addAssertion","isCorrect","find","item","totalPoints","newQuestion","nextQuestion","handleClassName","_","randomArray","question","map","index","key","defaultProps","store","player","Header","hash","md5","toString","loginReducer","gravatarEmail","Game","currentQuestion","componentDidMount","fetchAPI","URL","getItem","console","log","prevState","requestState","questions","requestAPI","questionData","to","addAssertionsAction","JSON","stringify","prevStorage","parse","correct_answer","incorrectAnswers","incorrect_answers","endPoint","resolve","data","results","response_code","sort","Math","random","error","requestQuestions","addAssertions","PlayAgain","playAgain","redirect","BtnRanking","Score","Feedback","message","imagesFeedback","image0","image1","image2","image3","image4","Home","toHome","Ranking","ranking","b","App","path","component","exact","INITIAL_STATE","action","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","window","Cypress","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8baf3845.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/couldBeBetter.30f7918f.gif\";","module.exports = __webpack_public_path__ + \"static/media/logoLogin.bdd9b986.png\";","module.exports = __webpack_public_path__ + \"static/media/logoheader.bdc31309.png\";","module.exports = __webpack_public_path__ + \"static/media/feedback0.3c874ad3.gif\";","module.exports = __webpack_public_path__ + \"static/media/win3.245d1cf8.gif\";","module.exports = __webpack_public_path__ + \"static/media/win4.a9eba695.gif\";","module.exports = __webpack_public_path__ + \"static/media/superWin.ddaf06bd.gif\";","const fetchToken = async () => {\n  const require = await fetch('https://opentdb.com/api_token.php?command=request');\n  const token = require.json();\n  return token;\n};\n\nexport default fetchToken;\n","export const FETCH_QUESTIONS = 'FETCH_QUESTIONS';\nexport const REQUEST_API = 'REQUEST_API';\nexport const REQUEST_SUCSSES = 'REQUEST_SUCSSES';\nexport const REQUEST_ERROR = 'REQUEST_ERROR';\nexport const USER_LOGIN = 'USER_LOGIN';\nexport const ADD_POINTS_SCORE = 'ADD_POINTS_SCORE';\nexport const COUNT_ASSERTIONS = 'COUNT_ASSERTIONS';\nexport const ADD_ASSERTIONS = 'ADD_ASSERTIONS';\nexport const SET_SETTINGS = 'SET_SETTINGS';\nconst randomNumber = 0.5;\n\nconst requestAPI = () => ({\n  type: REQUEST_API,\n});\n\nconst requestSuccess = (obj) => ({\n  type: REQUEST_SUCSSES,\n  questions: obj.results,\n  requestState: obj.response_code,\n  randomArray: obj.results.map((question) => [\n    question.correct_answer,\n    ...question.incorrect_answers].sort(() => Math.random() - randomNumber)),\n});\n\nconst requestError = (error) => ({\n  type: REQUEST_ERROR,\n  error,\n});\n\nexport const requestQuestions = (endPoint) => async (dispatch) => {\n  dispatch(requestAPI());\n  try {\n    const resolve = await fetch(endPoint);\n    const data = await resolve.json();\n    console.log(data);\n    dispatch(requestSuccess(data));\n  } catch (error) {\n    dispatch(requestError(error));\n  }\n};\n\nexport const setSettings = (obj) => ({\n  type: SET_SETTINGS,\n  obj,\n});\n\nexport const userLoginAction = (state) => ({\n  type: USER_LOGIN,\n  state,\n});\n\nexport const addPointsAction = (points) => ({\n  type: ADD_POINTS_SCORE,\n  points,\n});\n\nexport const countAssertions = (state) => ({\n  type: COUNT_ASSERTIONS,\n  state,\n});\n\nexport const addAssertions = (assertions) => ({\n  type: ADD_ASSERTIONS,\n  assertions,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setSettings } from '../redux/actions';\nimport './settings.css';\n\nclass Settings extends React.Component {\nstate = {\n  diff: '',\n  category: '',\n  type: '',\n}\n\n  onInputChange = ({ target }) => {\n    const { value, name } = target;\n    this.setState({ [name]: value });\n  }\n\n  onButtonClick = () => {\n    const { setSettingsAction, closeSettings } = this.props;\n    const { diff, category, type } = this.state;\n    setSettingsAction({ diff, category, type });\n    closeSettings();\n  }\n\n  render() {\n    const { diff, type, category } = this.state;\n    return (\n      <div className=\"settings-card\">\n        <h2 data-testid=\"settings-title\">Settings</h2>\n        <div className=\"config-card\">\n          <label className=\"input-category\" htmlFor=\"category\">\n            Category:\n            {' '}\n            <select\n              name=\"category\"\n              value={ category }\n              id=\"category\"\n              onChange={ this.onInputChange }\n            >\n              <option value=\"any\">Any Category</option>\n              <option value=\"9\">General Knowledge</option>\n              <option value=\"10\">Entertainment: Books</option>\n              <option value=\"11\">Entertainment: Film</option>\n              <option value=\"12\">Entertainment: Music</option>\n              <option value=\"13\">Entertainment: Musicals &amp; Theatres</option>\n              <option value=\"14\">Entertainment: Television</option>\n              <option value=\"15\">Entertainment: Video Games</option>\n              <option value=\"16\">Entertainment: Board Games</option>\n              <option value=\"17\">Science &amp; Nature</option>\n              <option value=\"18\">Science: Computers</option>\n              <option value=\"19\">Science: Mathematics</option>\n              <option value=\"20\">Mythology</option>\n              <option value=\"21\">Sports</option>\n              <option value=\"22\">Geography</option>\n              <option value=\"23\">History</option>\n              <option value=\"24\">Politics</option>\n              <option value=\"25\">Art</option>\n              <option value=\"26\">Celebrities</option>\n              <option value=\"27\">Animals</option>\n              <option value=\"28\">Vehicles</option>\n              <option value=\"29\">Entertainment: Comics</option>\n              <option value=\"30\">Science: Gadgets</option>\n              <option value=\"31\">Entertainment: Japanese Anime &amp; Manga</option>\n              <option value=\"32\">Entertainment: Cartoon &amp; Animations</option>\n            </select>\n          </label>\n          <label className=\"input-diff\" htmlFor=\"diff\">\n            Difficult:\n            {' '}\n            <select id=\"diff\" name=\"diff\" value={ diff } onChange={ this.onInputChange }>\n              <option value=\"any\">Any Difficulty</option>\n              <option value=\"easy\">Easy</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"hard\">Hard</option>\n            </select>\n          </label>\n          <label className=\"input-type\" htmlFor=\"type\">\n            Type:\n            {' '}\n            <select name=\"type\" value={ type } onChange={ this.onInputChange }>\n              <option value=\"any\">Any Type</option>\n              <option value=\"multiple\">Multiple Choice</option>\n              <option value=\"boolean\">True / False</option>\n            </select>\n          </label>\n          <button\n            type=\"button\"\n            onClick={ this.onButtonClick }\n            className=\"button\"\n          >\n            Aply\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSettingsAction: (state) => dispatch(setSettings(state)),\n});\n\nSettings.propTypes = {\n  setSettingsAction: PropTypes.func.isRequired,\n  closeSettings: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Settings);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport fetchToken from '../components/fetchToken';\nimport { userLoginAction } from '../redux/actions';\nimport './login.css';\nimport logo from '../images/logoLogin.png';\nimport '../App.css';\nimport Settings from './Settings';\n\nclass Login extends React.Component {\n    state = {\n      email: '',\n      name: '',\n      disabled: true,\n      settings: false,\n    }\n\n    validEmail = (email) => /[a-z0-9.]+@[a-z0-9]+\\.[a-z]/.test(email);\n\n    setOnChange = ({ target: { name, value } }) => {\n      this.setState({\n        [name]: value,\n      }, () => {\n        const { email, name: validName } = this.state;\n        if (this.validEmail(email) && validName.length >= 1) {\n          this.setState({ disabled: false });\n        } else {\n          this.setState({ disabled: true });\n        }\n      });\n    }\n\n    toSettings = () => {\n      this.setState({ settings: true });\n    }\n\n    closeSettings = () => {\n      this.setState({ settings: false });\n    }\n\n    setOnclick = async () => {\n      const { history, dispatchLogin } = this.props;\n      const require = await fetchToken();\n      const { token } = require;\n      const { name, email } = this.state;\n      dispatchLogin({ name, email });\n      await localStorage.setItem('token', token);\n      history.push('/game');\n    }\n\n    render() {\n      const { name, email, disabled, settings } = this.state;\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n            <form className=\"form-login\">\n              <label className=\"input-name\" htmlFor=\"name\">\n                Name:\n                <input\n                  name=\"name\"\n                  value={ name }\n                  data-testid=\"input-player-name\"\n                  type=\"text\"\n                  id=\"name\"\n                  onChange={ this.setOnChange }\n                />\n              </label>\n              <label className=\"input-email\" htmlFor=\"email\">\n                E-mail:\n                <input\n                  name=\"email\"\n                  value={ email }\n                  data-testid=\"input-gravatar-email\"\n                  type=\"email\"\n                  id=\"email\"\n                  onChange={ this.setOnChange }\n                />\n              </label>\n              <div className=\"buttons\">\n                <button\n                  className=\"button-play\"\n                  data-testid=\"btn-play\"\n                  type=\"button\"\n                  disabled={ disabled }\n                  onClick={ this.setOnclick }\n                >\n                  Play\n                </button>\n                <button\n                  className=\"button-settings\"\n                  data-testid=\"btn-settings\"\n                  type=\"button\"\n                  onClick={ this.toSettings }\n                >\n                  Settings\n                </button>\n              </div>\n            </form>\n            {settings && <Settings\n              closeSettings={ this.closeSettings }\n            />}\n          </header>\n        </div>\n      );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchLogin: (user) => dispatch(userLoginAction(user)),\n});\n\nLogin.propTypes = {\n  dispatchLogin: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './question.css';\nimport { connect } from 'react-redux';\nimport { addPointsAction, countAssertions } from '../redux/actions';\n\nclass Question extends React.Component {\n  state = {\n    avaliable: false,\n    timer: 30,\n    time: () => {},\n    difficultyPoints: [{ level: 'hard', value: 3 }, { level: 'medium', value: 2 },\n      { level: 'easy', value: 1 }],\n  }\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentDidUpdate(_, { timer }) {\n    if (timer === 1) this.stopTimer();\n  }\n\n  startTimer = () => {\n    this.setState(() => ({\n      time: setInterval(() => {\n        this.setState(({ timer }) => ({ timer: timer - 1 }));\n      }, Number('1000')),\n    }));\n  }\n\n  stopTimer = () => {\n    const { time } = this.state;\n    if (time) clearInterval(time);\n    this.setState({ avaliable: true });\n  }\n\n  onHandleClick = (answer, correctAnswer, difficulty) => {\n    const { difficultyPoints, timer, assertions } = this.state;\n    const { dispatch, score, addAssertion } = this.props;\n    const isCorrect = (answer === correctAnswer);\n    const points = difficultyPoints.find((item) => item.level === difficulty);\n    if (isCorrect) {\n      const number = 10;\n      const totalPoints = score + (number + (timer * points.value));\n      dispatch(addPointsAction(totalPoints));\n      dispatch(countAssertions(assertions));\n      addAssertion();\n    }\n    this.stopTimer();\n  }\n\n  newQuestion = () => {\n    const { nextQuestion } = this.props;\n    this.setState({ avaliable: false, timer: 30 });\n    nextQuestion();\n    this.startTimer();\n  }\n\n  handleClassName = (answer, correctAnswer) => {\n    const { avaliable } = this.state;\n    if (avaliable) {\n      if (answer === correctAnswer) {\n        return 'correct-answer';\n      }\n      return 'wrong-answer';\n    }\n    return 'button-answer';\n  };\n\n  render() {\n    const {\n      randomArray,\n      category,\n      correctAnswer,\n      question,\n      difficulty } = this.props;\n    const { avaliable, timer } = this.state;\n    return (\n      <div className=\"question\">\n        <div className=\"question-content\">\n          <div className=\"header-question-card\">\n            <p className=\"timer\">\n              Tempo:\n              {' '}\n              {timer}\n            </p>\n            <p className=\"category\" data-testid=\"question-category\">{category}</p>\n          </div>\n          <p className=\"question-text\" data-testid=\"question-text\">{question}</p>\n          <div className=\"answer-options\" data-testid=\"answer-options\">\n            {randomArray\n              .map((answer, index) => (\n                <button\n                  onClick={ () => {\n                    this.onHandleClick(answer, correctAnswer, difficulty);\n                  } }\n                  disabled={ !!(avaliable || timer === 0) }\n                  className={ this.handleClassName(answer, correctAnswer) }\n                  key={ index }\n                  type=\"button\"\n                  data-testid={ answer === correctAnswer\n                    ? 'correct-answer' : `wrong-answer-${index}` }\n                >\n                  {answer}\n                </button>\n              ))}\n            { avaliable\n          && (\n            <button\n              data-testid=\"btn-next\"\n              type=\"button\"\n              className=\"button-answer button-next\"\n              onClick={ this.newQuestion }\n            >\n              Next\n            </button>\n          )}\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  score: store.player.score,\n});\n\n// const mapDispatchToProps = (dispatch) => ({\n//   dispatchAssertions: (assertions) => dispatch(assertionsUp(assertions)),\n// });\n\nQuestion.propTypes = {\n  category: PropTypes.string,\n  correctAnswer: PropTypes.string,\n  question: PropTypes.string,\n  difficulty: PropTypes.string,\n  dispatch: PropTypes.func.isRequired,\n  score: PropTypes.number.isRequired,\n  addAssertion: PropTypes.func.isRequired,\n  nextQuestion: PropTypes.func.isRequired,\n  randomArray: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nQuestion.defaultProps = {\n  category: '',\n  correctAnswer: '',\n  question: '',\n  difficulty: '',\n};\n\nexport default connect(mapStateToProps)(Question);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport './header.css';\nimport logo from '../images/logoheader.png';\n\nclass Header extends React.Component {\n  render() {\n    const { name, score, email } = this.props;\n    const hash = md5(email).toString();\n    return (\n      <header className=\"header-game\">\n        <div className=\"logo-header\">\n          <img src={ logo } className=\"logo-2\" alt=\"Logo\" />\n        </div>\n        <h2 className=\"score-header\" data-testid=\"header-score\">\n          Pontos:\n          {' '}\n          { score }\n        </h2>\n        <div className=\"perfil-header\">\n          <div className=\"perfil-info\">\n            <img\n              className=\"img-header\"\n              data-testid=\"header-profile-picture\"\n              src={ `https://www.gravatar.com/avatar/${hash}` }\n              alt={ `Profile of: ${name}` }\n            />\n            <h2 className=\"name-header\" data-testid=\"header-player-name\">{ name }</h2>\n          </div>\n\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.loginReducer.gravatarEmail,\n  name: state.loginReducer.name,\n  score: state.player.score,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { addAssertions, requestQuestions } from '../redux/actions';\nimport Question from '../components/Question';\nimport Header from '../components/Header';\nimport './game.css';\n\nclass Game extends React.Component {\n  state = {\n    currentQuestion: 0,\n    assertions: 0,\n  }\n\n  componentDidMount = () => {\n    const { fetchAPI, type, category, diff } = this.props;\n    const URL = (`https://opentdb.com/api.php?amount=5${diff !== 'any' ? `&difficulty=${diff}` : ''}${category !== 'any' ? `&category=${category}` : ''}${type !== 'any' ? `&type=${type}` : ''}&token=${localStorage.getItem('token')}`);\n    fetchAPI(URL);\n    console.log(URL);\n  }\n\n  nextQuestion = () => {\n    this.setState((prevState) => ({ currentQuestion: prevState.currentQuestion + 1 }));\n  }\n\n  addAssertion = () => {\n    this.setState((prevState) => ({ assertions: prevState.assertions + 1 }));\n  }\n\n  render() {\n    const { requestState, questions, requestAPI, randomArray } = this.props;\n    const { currentQuestion } = this.state;\n    const questionData = questions[currentQuestion];\n    const requestFailed = 3;\n    const ultimaPergunta = 5;\n    if (requestState === requestFailed) {\n      return <Redirect to=\"/\" />;\n    }\n    if (currentQuestion === ultimaPergunta) {\n      const { name, email, score, addAssertionsAction } = this.props;\n      const { assertions } = this.state;\n      if (localStorage.getItem('ranking') === null) {\n        localStorage.setItem('ranking', JSON.stringify([{ email, score, name }]));\n      } else {\n        const prevStorage = JSON.parse(localStorage.getItem('ranking'));\n        localStorage.setItem('ranking',\n          JSON.stringify([...prevStorage, { email, score, name }]));\n      }\n      addAssertionsAction(assertions);\n      return <Redirect to=\"/feedback\" />;\n    }\n    return (\n      <div className=\"game-content\">\n        <Header />\n        {!requestAPI\n        && <Question\n          category={ questionData.category }\n          question={ questionData.question }\n          randomArray={ randomArray[currentQuestion] }\n          correctAnswer={ questionData.correct_answer }\n          incorrectAnswers={ questionData.incorrect_answers }\n          difficulty={ questionData.difficulty }\n          nextQuestion={ this.nextQuestion }\n          addAssertion={ this.addAssertion }\n        />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  requestState: store.player.requestState,\n  questions: store.player.questions,\n  requestAPI: store.player.requestAPI,\n\n  name: store.loginReducer.name,\n  email: store.loginReducer.gravatarEmail,\n  score: store.player.score,\n  randomArray: store.player.randomArray,\n\n  type: store.player.type,\n  diff: store.player.diff,\n  category: store.player.category,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAPI: (endPoint) => dispatch(requestQuestions(endPoint)),\n  addAssertionsAction: (assertions) => dispatch(addAssertions(assertions)),\n});\n\nGame.propTypes = {\n  fetchAPI: PropTypes.func.isRequired,\n  requestState: PropTypes.oneOfType([PropTypes.number]),\n  questions: PropTypes.arrayOf(PropTypes.object),\n  requestAPI: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  randomArray: PropTypes.arrayOf(PropTypes.string),\n  addAssertionsAction: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  diff: PropTypes.string,\n  category: PropTypes.string,\n};\n\nGame.defaultProps = {\n  requestState: 0,\n  questions: [],\n  randomArray: [],\n  diff: 'any',\n  category: 'any',\n  type: 'any',\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass PlayAgain extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      redirect: false,\n    };\n  }\n\n  playAgain = () => {\n    this.setState({ redirect: true });\n  }\n\n  render() {\n    const { redirect } = this.state;\n    if (redirect) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <button\n        className=\"button-play-again\"\n        type=\"button\"\n        data-testid=\"btn-play-again\"\n        onClick={ this.playAgain }\n      >\n        Play Again\n      </button>\n    );\n  }\n}\n\nexport default PlayAgain;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass BtnRanking extends React.Component {\n  render() {\n    const { history } = this.props;\n    return (\n      <button\n        className=\"button-ranking\"\n        type=\"button\"\n        data-testid=\"btn-ranking\"\n        onClick={ () => history.push('/ranking') }\n      >\n        Ranking\n      </button>);\n  }\n}\n\nBtnRanking.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default BtnRanking;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass Score extends React.Component {\n  render() {\n    const { score, assertions } = this.props;\n    return (\n      <div className=\"score\">\n        <p>\n          Placar final:\n          {' '}\n          <span data-testid=\"feedback-total-score\">{score}</span>\n        </p>\n        <p>\n          Acertos:\n          {' '}\n          <span data-testid=\"feedback-total-question\">{assertions}</span>\n        </p>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  score: store.player.score,\n  assertions: store.player.assertions,\n});\n\nScore.propTypes = {\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n};\n\nexport default connect(mapStateToProps)(Score);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport PlayAgain from '../components/PlayAgain';\nimport BtnRanking from '../components/BtnRanking';\nimport Score from '../components/Score';\nimport image0 from '../images/feedback0.gif';\nimport image1 from '../images/couldBeBetter.gif';\nimport image2 from '../images/win3.gif';\nimport image3 from '../images/win4.gif';\nimport image4 from '../images/superWin.gif';\nimport './feedback.css';\n\nclass Feedback extends React.Component {\n  render() {\n    const { assertions, history } = this.props;\n    const condition = 3;\n    const message = (assertions >= condition ? 'Well Done!' : 'Could be better...');\n    const imagesFeedback = [image0, image1, image1, image2, image3, image4];\n    console.log(imagesFeedback);\n    console.log(assertions);\n    return (\n      <div className=\"feedback-content\">\n        <Header />\n        <div className=\"feedback-card\">\n          <h3 className=\"feedback-text\" data-testid=\"feedback-text\">{message}</h3>\n          <img\n            className=\"feedback-image\"\n            src={ imagesFeedback[assertions] }\n            alt=\"Feedback\"\n          />\n          <Score />\n          <div className=\"buttons\">\n            <PlayAgain />\n            <BtnRanking history={ history } />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  assertions: state.loginReducer.assertions,\n});\n\nFeedback.propTypes = {\n  assertions: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps)(Feedback);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      redirect: false,\n    };\n  }\n\n  toHome = () => {\n    this.setState({ redirect: true });\n  }\n\n  render() {\n    const { redirect } = this.state;\n    if (redirect) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <button\n        className=\"button-home\"\n        type=\"button\"\n        data-testid=\"btn-go-home\"\n        onClick={ this.toHome }\n      >\n        Home\n      </button>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport md5 from 'crypto-js/md5';\nimport Home from '../components/Home';\nimport './ranking.css';\n\nclass Ranking extends React.Component {\n  state = {\n    ranking: [],\n  }\n\n  componentDidMount() {\n    this.setState({ ranking: JSON.parse(localStorage.getItem('ranking')) });\n  }\n\n  render() {\n    const { ranking } = this.state;\n    return (\n      <div className=\"ranking\">\n        <p className=\"ranking-title\" data-testid=\"ranking-title\">Ranking</p>\n        <ol className=\"ranking-list\">\n          { ranking.sort((a, b) => b.score - a.score).map((item, index) => (\n            <li className=\"ranking-list-item\" key={ index }>\n              <div className=\"list-perfil\">\n                <img src={ `https://www.gravatar.com/avatar/${md5(item.email).toString()}` } alt={ item.name } />\n                <p data-testid={ `player-name-${index}` }>{item.name}</p>\n              </div>\n              <p data-testid={ `player-score-${index}` }>\n                {' '}\n                Pontos:\n                {' '}\n                {item.score}\n              </p>\n            </li>\n          )) }\n        </ol>\n        <Home />\n      </div>\n    );\n  }\n}\n\nexport default Ranking;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Settings from './pages/Settings';\nimport Game from './pages/Game';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\n\nexport default function App() {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/trivia\" component={ Login } exact />\n        <Route path=\"/settings\" component={ Settings } />\n        <Route path=\"/game\" component={ Game } />\n        <Route path=\"/ranking\" component={ Ranking } />\n        <Route path=\"/feedback\" component={ Feedback } />\n      </Switch>\n    </div>\n  );\n}\n","import {\n  REQUEST_API,\n  REQUEST_SUCSSES,\n  ADD_POINTS_SCORE,\n  ADD_ASSERTIONS,\n  SET_SETTINGS,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n  requestAPI: true,\n  type: 'any',\n  diff: 'any',\n  category: 'any',\n};\n\nconst player = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_API:\n    return { ...state, requestAPI: true };\n  case REQUEST_SUCSSES:\n    return { ...state,\n      questions: action.questions,\n      score: 0,\n      randomArray: action.randomArray,\n      requestAPI: false,\n      requestState: action.requestState,\n    };\n  case ADD_POINTS_SCORE:\n    return {\n      ...state,\n      score: action.points,\n    };\n  case ADD_ASSERTIONS:\n    return {\n      ...state,\n      assertions: action.assertions,\n    };\n  case SET_SETTINGS:\n    return {\n      ...state,\n      type: action.obj.type,\n      diff: action.obj.diff,\n      category: action.obj.category,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default player;\n","import { COUNT_ASSERTIONS, USER_LOGIN } from '../actions';\n\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  gravatarEmail: '',\n};\n\nconst loginReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case USER_LOGIN:\n    return {\n      ...state,\n      assertions: 0,\n      name: action.state.name,\n      gravatarEmail: action.state.email,\n    };\n  case COUNT_ASSERTIONS:\n    return {\n      ...state,\n      assertions: state.assertions + 1,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default loginReducer;\n","import { combineReducers } from 'redux';\nimport player from './player';\nimport loginReducer from './loginReducer';\n\nconst rootReducer = combineReducers({\n  player,\n  loginReducer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, legacy_createStore as createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './redux/store/index';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}